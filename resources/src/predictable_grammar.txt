1. program → declaration-list EOF
2. declaration-list → type-specifier ID declaration declaration-list | ε
3. declaration → var-declaration | fun-declaration
4. var-declaration → ; | [ NUM ] ;
5. type-specifier → int | void
6. fun-declaration → ( params ) compound-stmt
7. params → int-starting-param-list | void-starting-param-list
8. void-starting-param-list → void rest-of-void-starting-param-list
9. rest-of-void-starting-param-list → ID rest-of-param param-list-prime | ε
10. int-starting-param-list → int ID rest-of-param param-list-prime
11. param-list-prime → , param param-list-prime | ε
12. param → type-specifier ID rest-of-param
13. rest-of-param → ε | [ ]
14. compound-stmt → { declaration-list statement-list }
15. statement-list → statement statement-list | ε
16. statement → expression-stmt | compound-stmt | selection-stmt | iteration-stmt | return-stmt | switch-stmt
17. expression-stmt → expression ; | continue ; | break ; | ;
18. selection-stmt → if ( expression ) statement else statement
19. iteration-stmt → while ( expression ) statement
20. return-stmt → return rest-of-return-stmt
21. rest-of-return-stmt → ; | expression ;
22. switch-stmt → switch ( expression ) { case-stmts default-stmt }
23. case-stmts → case-stmt case-stmts | ε
24. case-stmt → case NUM : statement-list
25. default-stmt → default : statement-list | ε
26. expression → simple-expression | ID id-expression
27. id-expression → = expression | id-simple-expression | [ expression ] bracket-id-expression
28. bracket-id-expression → = expression | ε
29. simple-expression → additive-expression rest-of-simple-expression
30. id-simple-expression → id-additive-expression rest-of-simple-expression
31. rest-of-simple-expression → RELOP addop-relop-rest | ε
32. addop-relop-rest → additive-expression | ID id-additive-expression
33. additive-expression → term additive-expression-prime
34. id-additive-expression → id-term additive-expression-prime
35. additive-expression-prime → #PushAddOp + addop-relop-rest #AddOp | #PushSubOp - minus-expr | ε
36. minus-expr → term #AddOp additive-expression-prime | ID id-term #AddOp additive-expression-prime
37. term → factor term-prime
38. id-term → reference term-prime
39. term-prime → * mult-rest | ε
40. mult-rest → term | ID id-term
41. factor → ( expression ) | #PushNum NUM
42. reference → call | ε
43. call → ( args ) #Print
44. args → arg-list | ε
45. arg-list → expression arg-list-prime
46. arg-list-prime → , expression arg-list-prime | ε